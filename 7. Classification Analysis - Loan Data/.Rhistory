Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Train50_pred <- predict(Train50_tree, Train50, type = 'class')
table(Test50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
Train50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50
Test50 = Test50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits))
str(Test50)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
t_perf = performance(Test50_prune8_pre, 'tpr', 'fpr')
t_perf = performance(Test50_prune8_pred, 'tpr', 'fpr')
plot(t_perf)
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50)
table(Test50_prune8_pred, Test50$Creditability)
Test50_prune8
t_perf = performance(Test50_prune8_pred, 'tpr', 'fpr')
Test50_prune8_pred
x=rep(0,500)
for(i in 1:500)
{x[i] = max[i,]}
x=rep(0,500)
for(i in 1:500){x[i] = max[i,]}
x=rep(0,500)
for(i in 1:500){x[i] = max(Test50_prune8_pred[i,])}
x
prod_pred=prediction(x,Train50$Creditability)
plot(performance(pro_pred,'tpr', 'fpr'))
prod_pred=prediction(x,Train50$Creditability)
plot(performance(pro_pred,'tpr', 'fpr'))
plot(performance(prod_pred,'tpr', 'fpr'))
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
tree_model <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
prod_pred=prediction(Test50_prune8_pred[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'))
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1)
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, color='red')
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, color='red')
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
summary(tree_model)
plot(tree_model)
text(tree_model, pretty=0,cex=0.6)
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
Test50_prune8_pred2
Train50_pred2 <- predict(tree_model, Train50)
x=rep(0,500)
for(i in 1:500){x[i] = max(Train50_pred2[i,])}
prod_pred=prediction(x,Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr'), main='Train Data');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Par(mfrow=c(2,2))
par(mfrow=c(2,2))
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train Data');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test Data');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Test Data');abline(a=0, b=1, col='red')
plot(perf)
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
detach(package:performance)
plot(perf, main='Train: Logistic')
plot(perf, main='Train: Logistic')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
pred_train_tree=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
pred_train_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
pred_test_tree=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
acc_log_train = sum(diag(as.matrix(table(Train50$Creditability,Threshold50))))/500
acc_log_test = sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
acc_log_train
acc_log_test
acc_tree_train = sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
acc_tree_test = sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
acc_tree_test_prune = sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
acc_tree_train_prune = sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method', 'Prune Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
accuracy_table
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
ori_data = read.csv('ori_data.csv')
head(ori_data)
margin.table(prop.table(table(Duration.in.Current.address, Most.valuable.available.asset, Concurrent.Credits,No.of.Credits.at.this.Bank,Occupation,No.of.dependents,Telephone, Foreign.Worker)),1)
colnames(ori_data)
margin.table(prop.table(table(Duration.in.Current.address, Most.valuable.available.asset, Concurrent.Credits,No.of.Credits.at.this.Bank,Occupation,No.of.dependents,Telephone, Foreign.Worker)),1)
attach(ori_data)
attach(ori_data)
margin.table(prop.table(table(Duration.in.Current.address, Most.valuable.available.asset, Concurrent.Credits,No.of.Credits.at.this.Bank,Occupation,No.of.dependents,Telephone, Foreign.Worker)),1)
ori_data
ls()
rm(list=ls())
ls()
ori_data = read.csv('ori_data.csv')
colnames(ori_data)
attach(ori_data)
margin.table(prop.table(table(Duration.in.Current.address, Most.valuable.available.asset, Concurrent.Credits,No.of.Credits.at.this.Bank,Occupation,No.of.dependents,Telephone, Foreign.Worker)),1)
ls()
german_credit = read.csv('ori_data.csv')
colnames(german_credit)
attach(german_credit)
summary(Duration.of.Credit..month.)
search()
detach(ori_data)
attach(german_credit)
summary(Duration.of.Credit..month.)
search()
detach(ori_data)
search()
detach(ori_data)
search()
detach(german_credit)
search()
detach(german_credit)
search()
attach(german_credit)
summary(Duration.of.Credit..month.)
?sample
1:nrow(german_credit)
length(german_credit)
nrow(german_credit)
indexes = sample(german_credit, 0.5 * nrow(german_credit))
indexes = sample(german_credit,size =  0.5 * nrow(german_credit))
indexes = sample(german_credit,size =  0.5 * nrow(german_credit))
indexes = sample(1000, 500
indexes = sample(1000, 500)
indexes = sample(1000, 500)
indexes
traindata = german_credit[indexes,]
testdata = german_credit[-indexes,]
head(traindata)
head(testdata)
data = read.csv('Ch6_ridership_data_2011-2012.csv')
data
ls()
data
rm('data')
ls()
search()
ls()
data = read.csv('Ch6_ridership_data_2011-2012.csv')
data
ls()
head(data)
str(data)
class(data)
year(datetime)
library(lubridate)
year(datetime)
year(data$datetime)
str(data)
data %>% group_by(year = year(datetime), month = month(datetime)) %>%
summarise(riders = sum(count))
library(lubridate)
library(dplyr)
data %>% group_by(year = year(datetime), month = month(datetime)) %>%
summarise(riders = sum(count))
monthly_ride = data %>%
group_by(year = year(datetime), month = month(datetime)) %>%
summarise(riders = sum(count))
table(monthly_ride$year)
table(monthly_ride$year, monthly_ride$month)
head(monthly_ride)
riders = monthly_ride[,3]
riders
riders = monthly_ride[,3]
monthly = ts(riders, frequency = 12, start = c(2011,1))
head(monthly)
class(monthly)
riders = monthly_ride[,3]
monthly = ts(riders, frequency = 12, start = c(2011,1))
class(monthly)
riders = monthly_ride[,3]
monthly = ts(riders, frequency = 12, start = c(2011,1))
class(monthly)
monthly
plot(decompose(monthly))
auto.arima(monthly)
library(lubridate) # year, month
library(dplyr) # %>%
library(forecast) # auto.arima
auto.arima(monthly)
forecast(auto.arima(monthly))
yr_forecast = forecast(auto.arima(monthly))
yr_forecast = forecast(auto.arima(monthly))
plot(yr_forecast)
year_forecast <- forecast(tbats(monthly), h = 12)
year_forecast = forecast(tbats(monthly), h = 12)
plot(year_forecast)
monthly
monthly_ride
gdp = read.csv(file.choose())
head(gdp)
year(gdp$date)
year(gdp$month)
month(gdp$date)
gdp_ts = ts(gdp, frequency=1, start=1947)
head(gdp_ts)
gdp_ts = ts(gdp, frequency=12, start=1947)
head(gdp_ts)
gdp_ts
summary(gdp_ts)
dim(gdp)
gdp_ts = ts(gdp, frequency=1, start=1947)
dim(gdp_ts)
class(gdp_ts)
gdp_ts = ts(gdp, frequency=1, start=1947)
dim(gdp)
gdp_ts = ts(gdp, frequency=1, start=1947)
dim(gdp_ts)
class(gdp_ts)
gdp_ts = ts(gdp, frequency=1, start=c(1947,1))
dim(gdp_ts)
class(gdp_ts)
plot(decompose(gdp_ts))
head(gdp_ts)
head(gdp)
gdp[,3]
gdp[c('abs'),c(2,3)]
gdp
data = data %>% subset(data$series=='abs')
data = data %>% subset(data$series=='abs') %>% omit.na()
apropos('omit')
data = data %>% subset(data$series=='abs') %>% na.omit()
head(data)
data
unique(data$series)
data = gdp %>% subset(gdp$series=='abs') %>% na.omit()
data = gdp %>% subset(gdp$series=='abs') %>% subset(year(gdp$date > 1954))
gdp = read.csv(file.choose())
dim(gdp)
data = gdp %>% subset(gdp$series=='abs') %>% subset(year(gdp$date > 1954))
colnames(gdp)
data = gdp %>% subset(gdp$series=='abs') %>% subset(year(gdp$date > 1954))
class(gdp)
data = gdp %>% filter(gdp$series=='abs') %>% filter(year(gdp$date > 1954))
data = gdp %>% filter(gdp$series=='abs' & year(gdp$date > 1954
data = gdp %>% filter(gdp$series=='abs' & year(gdp$date > 1954)
data = gdp %>% filter(gdp$series=='abs' & year(gdp$date > 1954)
data = gdp %>% filter(gdp$series=='abs' & year(gdp$date > 1954))
data = gdp %>% filter(gdp$series=='abs' & year(gdp$date > 1954))
data = gdp %>%
filter(series=='abs' & year(date > 1954))
data = gdp %>%
subset(series=='abs' & year(date > 1954))
gdp$data = as.Date(gdp$date, format = "%Y-%m-%d")
data = gdp %>%
subset(series=='abs' & year(date > 1954))
gdp$data = as.Date(gdp$date, format = "%Y-%m-%d")
colnames(gdp)
str(gdp)
gdp$data = as.Date(gdp$date, format = "%Y-%m-%d")
data = gdp %>%
subset(series=='abs' & year(date > 1954), select = c('date', 'gdp'))
class(gdp$date)
str(gdp)
gdp$date = as.Date(gdp$date, format = "%Y-%m-%d")
data = gdp %>%
subset(series=='abs' & year(date > 1954), select = c('date', 'gdp'))
str(gdp)
gdp$data = NULL
str(gdp)
class(gdp$date)
data = gdp %>%
subset(series == 'abs' & year(date > 1954), select = c('date', 'gdp'))
data = gdp %>%
subset(series == 'abs' & year(date) > 1954, select = c('date', 'gdp'))
data
is.na(data)
sum(is.na(data))
nrow(data)
length(data)
dim(gdp_ts)
gdp_ts = ts(data, frequency=1, start=c(1955,1))
dim(gdp_ts)
class(gdp_ts)
plot(decompose(gdp_ts))
