library(tree)
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
table(Test50_prune8_pred, Test50$Creditability)
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type="class")
table(Test50_pred, Test50$Creditability)
Test50_pred <- predict(Train50_tree, Test50, type="class")
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type="class")
Test50 = read.csv(file.choose())
Test50_pred <- predict(Train50_tree, Test50, type="class")
Test50
Train50_tree
Test50_pred <- predict(Train50_tree, Test50, type="class")
test_pred = prediction(Train50_tree,Train50$Creditability) #
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+
Payment.Status.of.Previous.Credit+Purpose+Credit.Amount+
Value.Savings.Stocks+Length.of.current.employment+
Instalment.per.cent+Sex...Marital.Status+Guarantors+
Duration.in.Current.address+Most.valuable.available.asset+
Age..years.+Concurrent.Credits+Type.of.apartment+
No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone,
data=Train50,
method="class")
summary(Train50_tree)
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type="class")
table(Test50_pred, Test50$Creditability)
Test50_pred <- predict(Train50_tree, Test50)
table(Test50_pred, Test50$Creditability)
Train50_prune8 <- prune.misclass(Train50_tree, best=8)
table(Test50_pred, Test50$Creditability)
Test50_pred
head(Test50_pred)
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type="class")
Test50_pred
head(Test50_pred)
Test50_pred <- predict(Train50_tree, Test50, type="class")
Test50_pred <- predict(Train50_tree, Test50)
Test50_pred
head(Test50_pred)
Test50_pred <- predict(Train50_tree, Test50)
table(Test50_pred, Test50$Creditability)
table(Test50_pred)
table(Test50_pred, Threshold50)
table(Test50_pred, Test50$Creditability)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
?predict
Train50
str(Train50)
Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits)) %>%
mutate(Duration.of.Credit..month. = as.factor(Duration.of.Credit..month.)) %>%
mutate(Credit.Amount = as.factor(Credit.Amount)) %>%
mutate(Age..years. = as.factor(Age..years.))
str(Train50)
Train50 = read.csv(file.choose())
library(dplyr)
Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits)) %>%
mutate(Duration.of.Credit..month. = as.factor(Duration.of.Credit..month.)) %>%
mutate(Credit.Amount = as.factor(Credit.Amount)) %>%
mutate(Age..years. = as.factor(Age..years.))
str(Train50)
Train50 = Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits)) %>%
mutate(Duration.of.Credit..month. = as.factor(Duration.of.Credit..month.)) %>%
mutate(Credit.Amount = as.factor(Credit.Amount)) %>%
mutate(Age..years. = as.factor(Age..years.))
str(Train50)
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
Train50 = read.csv(file.choose())
Train50 = Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits)) %>%
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
library(dplyr)
Train50 = Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits)) %>%
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
Train50 = Train50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits))
Train50_tree <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
summary(Train50_tree)
par(mfrow=c(1,1))
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
str(Train50)
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
Test50 = read.csv(file.choose())
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
Test50_pred <- predict(Train50_tree, Train50, type = 'class')
table(Test50_pred, Train50$Creditability)
Train50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
plot(Train50_tree)
text(Train50_tree, pretty=0,cex=0.6)
Train50_pred <- predict(Train50_tree, Train50, type = 'class')
table(Test50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
Train50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50
Test50 = Test50 %>% mutate(Creditability = as.factor(Creditability)) %>%
mutate(Account.Balance = as.factor(Account.Balance)) %>%
mutate(Payment.Status.of.Previous.Credit = as.factor(Payment.Status.of.Previous.Credit)) %>%
mutate(Purpose = as.factor(Purpose)) %>%
mutate(Value.Savings.Stocks = as.factor(Value.Savings.Stocks)) %>%
mutate(Length.of.current.employment = as.factor(Length.of.current.employment)) %>%
mutate(Sex...Marital.Status = as.factor(Sex...Marital.Status)) %>%
mutate(Most.valuable.available.asset = as.factor(Most.valuable.available.asset)) %>%
mutate(Type.of.apartment = as.factor(Type.of.apartment)) %>%
mutate(Concurrent.Credits = as.factor(Concurrent.Credits))
str(Test50)
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
t_perf = performance(Test50_prune8_pre, 'tpr', 'fpr')
t_perf = performance(Test50_prune8_pred, 'tpr', 'fpr')
plot(t_perf)
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50)
table(Test50_prune8_pred, Test50$Creditability)
Test50_prune8
t_perf = performance(Test50_prune8_pred, 'tpr', 'fpr')
Test50_prune8_pred
x=rep(0,500)
for(i in 1:500)
{x[i] = max[i,]}
x=rep(0,500)
for(i in 1:500){x[i] = max[i,]}
x=rep(0,500)
for(i in 1:500){x[i] = max(Test50_prune8_pred[i,])}
x
prod_pred=prediction(x,Train50$Creditability)
plot(performance(pro_pred,'tpr', 'fpr'))
prod_pred=prediction(x,Train50$Creditability)
plot(performance(pro_pred,'tpr', 'fpr'))
plot(performance(prod_pred,'tpr', 'fpr'))
sum(diag(as.matrix(table(Test50_pred, Train50$Creditability))))/500
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
tree_model <- tree(Creditability ~ Account.Balance+Duration.of.Credit..month.+Payment.Status.of.Previous.Credit+
Purpose+Credit.Amount+Value.Savings.Stocks+Length.of.current.employment+Instalment.per.cent+Sex...Marital.Status+
Guarantors+Duration.in.Current.address+Most.valuable.available.asset+Age..years.+Concurrent.Credits+
Type.of.apartment+No.of.Credits.at.this.Bank+Occupation+No.of.dependents+Telephone, data=Train50, method="class")
prod_pred=prediction(Test50_prune8_pred[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'))
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1)
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, color='red')
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, color='red')
plot(performance(prod_pred,'tpr', 'fpr'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main= 'Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
summary(tree_model)
plot(tree_model)
text(tree_model, pretty=0,cex=0.6)
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
Test50_prune8_pred2
Train50_pred2 <- predict(tree_model, Train50)
x=rep(0,500)
for(i in 1:500){x[i] = max(Train50_pred2[i,])}
prod_pred=prediction(x,Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr', main='Train Data'));abline(a=0, b=1, col='red')
plot(performance(prod_pred,'tpr', 'fpr'), main='Train Data');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Par(mfrow=c(2,2))
par(mfrow=c(2,2))
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train Data');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train Data');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test Data');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Test Data');abline(a=0, b=1, col='red')
plot(perf)
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
detach(package:performance)
plot(perf, main='Train: Logistic')
plot(perf, main='Train: Logistic')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
plot(perf, main='Train: Logistic')
plot(perf2, main='Test: Logistic')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
prod_pred=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
prod_pred=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
prod_pred=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(prod_pred,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Train50_pred <- predict(tree_model, Train50, type = 'class')
table(Train50_pred, Train50$Creditability)
sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
Train50_pred2 <- predict(tree_model, Train50)
pred_train_tree=prediction(Train50_pred2[,2],Train50$Creditability)
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
Train50_prune8 <- prune.misclass(tree_model, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Train50, type="class")
table(Test50_prune8_pred, Train50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Train50)
pred_train_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
Test50_pred <- predict(Train50_tree, Test50, type = 'class')
table(Test50_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
Test50_pred2 <- predict(Train50_tree, Test50)
pred_test_tree=prediction(Test50_pred2[,2],Train50$Creditability)
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
Test50_prune8 <- prune.misclass(Train50_tree, best=8)
Test50_prune8_pred <- predict(Train50_prune8, Test50, type="class")
table(Test50_prune8_pred, Test50$Creditability)
sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
Test50_prune8_pred2 <- predict(Train50_prune8, Test50)
pred_test_prune_tree=prediction(Test50_prune8_pred2[,2],Train50$Creditability)
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
acc_log_train = sum(diag(as.matrix(table(Train50$Creditability,Threshold50))))/500
acc_log_test = sum(diag(as.matrix(table(testdat$Creditability,Threshold50))))/500
acc_log_train
acc_log_test
acc_tree_train = sum(diag(as.matrix(table(Train50_pred, Train50$Creditability))))/500
acc_tree_test = sum(diag(as.matrix(table(Test50_pred, Test50$Creditability))))/500
acc_tree_test_prune = sum(diag(as.matrix(table(Test50_prune8_pred, Test50$Creditability))))/500
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
acc_tree_train_prune = sum(diag(as.matrix(table(Test50_prune8_pred, Train50$Creditability))))/500
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
accuracy_table = data.frame(model = c('Logistic Regression', 'Tree-Based Method', 'Prune Tree-Based Method'),
train = c(acc_log_train, acc_tree_train, acc_tree_train_prune),
test = c(acc_log_test, acc_tree_test, acc_tree_test_prune))
accuracy_table
par(mfrow=c(2,3))
plot(perf, main='Train: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_train_tree,'tpr', 'fpr'), main='Train: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_train_prune_tree,'tpr', 'fpr'), main='Prune Train: Tree');abline(a=0, b=1, col='red')
plot(perf2, main='Test: Logistic');abline(a=0, b=1, col='red')
plot(performance(pred_test_tree,'tpr', 'fpr'), main='Test: Tree');abline(a=0, b=1, col='red')
plot(performance(pred_test_prune_tree,'tpr', 'fpr'), main='Prune Test: Tree');abline(a=0, b=1, col='red')
