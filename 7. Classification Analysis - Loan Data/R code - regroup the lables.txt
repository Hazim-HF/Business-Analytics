
R version 4.3.1 (2023-06-16 ucrt) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> cdata=read.csv(file.choose())
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ Creditability                    : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Account.Balance                  : int  1 1 2 1 1 1 1 1 4 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : int  2 0 9 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> cdata$Creditability=as.factor(cdata$Creditability)
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ Creditability                    : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : int  1 1 2 1 1 1 1 1 4 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : int  2 0 9 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> table(cdata$Creditability)

  0   1 
300 700 
> sum(table(cdata$Creditability))
[1] 1000
> (table(cdata$Creditability)/sum(table(cdata$Creditability)))*100

 0  1 
30 70 
> credit_percent=(table(cdata$Creditability)/sum(table(cdata$Creditability)))*100
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ Creditability                    : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : int  1 1 2 1 1 1 1 1 4 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : int  2 0 9 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> cdata$Account.Balance=as.factor(cdata$Account.Balance)
> table(cdata$Account.Balance)

  1   2   3   4 
274 269  63 394 
> table(cdata$Account.Balance)/sum(table(cdata$Account.Balance))

    1     2     3     4 
0.274 0.269 0.063 0.394 
> (table(cdata$Account.Balance)/sum(table(cdata$Account.Balance)))*100

   1    2    3    4 
27.4 26.9  6.3 39.4 
> accbal_percent=(table(cdata$Account.Balance)/sum(table(cdata$Account.Balance)))*100
> accbal_percent

   1    2    3    4 
27.4 26.9  6.3 39.4 
> names(cdata)
 [1] "Creditability"                     "Account.Balance"                  
 [3] "Duration.of.Credit..month."        "Payment.Status.of.Previous.Credit"
 [5] "Purpose"                           "Credit.Amount"                    
 [7] "Value.Savings.Stocks"              "Length.of.current.employment"     
 [9] "Instalment.per.cent"               "Sex...Marital.Status"             
[11] "Guarantors"                        "Duration.in.Current.address"      
[13] "Most.valuable.available.asset"     "Age..years."                      
[15] "Concurrent.Credits"                "Type.of.apartment"                
[17] "No.of.Credits.at.this.Bank"        "Occupation"                       
[19] "No.of.dependents"                  "Telephone"                        
[21] "Foreign.Worker"                   
> names(cdata)[1]="cr"
> names(cdata)
 [1] "cr"                                "Account.Balance"                  
 [3] "Duration.of.Credit..month."        "Payment.Status.of.Previous.Credit"
 [5] "Purpose"                           "Credit.Amount"                    
 [7] "Value.Savings.Stocks"              "Length.of.current.employment"     
 [9] "Instalment.per.cent"               "Sex...Marital.Status"             
[11] "Guarantors"                        "Duration.in.Current.address"      
[13] "Most.valuable.available.asset"     "Age..years."                      
[15] "Concurrent.Credits"                "Type.of.apartment"                
[17] "No.of.Credits.at.this.Bank"        "Occupation"                       
[19] "No.of.dependents"                  "Telephone"                        
[21] "Foreign.Worker"                   
> table(cdata$"Payment.Status.of.Previous.Credit"
+ )

  0   1   2   3   4 
 40  49 530  88 293 
> ps=table(cdata$"Payment.Status.of.Previous.Credit")
> names(ps)
[1] "0" "1" "2" "3" "4"
> names(ps)[1]
[1] "0"
> names(ps)[1]="Delayed"
> names(ps)[2]="Other credits"
> names(ps)[3]="Paid up"
> names(ps)[4]="No problem - current"
> names(ps)[5]="Paid - previous"
> ps
             Delayed        Other credits              Paid up 
                  40                   49                  530 
No problem - current      Paid - previous 
                  88                  293 
> 100*(ps/sum(ps))
             Delayed        Other credits              Paid up 
                 4.0                  4.9                 53.0 
No problem - current      Paid - previous 
                 8.8                 29.3 
> pp=table(cdata$"Purpose")
> table(pp)
pp
  9  12  22  50  97 103 181 234 280 
  1   2   1   1   1   1   1   1   1 
> sum(pp)
[1] 1000
> (pp/sum(pp))*100

   0    1    2    3    4    5    6    8    9   10 
23.4 10.3 18.1 28.0  1.2  2.2  5.0  0.9  9.7  1.2 
> names(pp)
 [1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "8"  "9"  "10"
> names(pp)[1]="Other"
> names(pp)[2]="New car"
> names(pp)[3]="Used car"
> names(pp)[4]="Furniture"
> names(pp)[4]="Radio/TV"
> names(pp)[4]="Furniture"
> names(pp)[5]="Radio/TV"
> names(pp)[6]="Appliances"
> names(pp)[7]="Repair"
> names(pp)[8]="Vacation"
> names(pp)[9]="Retraining"
> names(pp)[10]="Business"
> (pp/sum(pp))*100
     Other    New car   Used car  Furniture   Radio/TV Appliances     Repair 
      23.4       10.3       18.1       28.0        1.2        2.2        5.0 
  Vacation Retraining   Business 
       0.9        9.7        1.2 
> pp
     Other    New car   Used car  Furniture   Radio/TV Appliances     Repair 
       234        103        181        280         12         22         50 
  Vacation Retraining   Business 
         9         97         12 
> cdata$Purpose
   [1]  2  0  9  0  0  0  0  0  3  3  0  1  3 10  3  3  0  3  3  0  0  0  5  4
  [25]  0  3  2  3  0  1  3  0  0  3  0  0  0  3  1  1  5 10  0  9  6  0  9  6
  [49]  0  9  0  3  0  3  1  3  3  3  3  0  0  1  3  0  0  3  3  3  3  0  2  3
  [73]  3  2  3  2  1  0  0  3  0  3  0  1  2  0  1  3  0  0  0  3  9  3  2  2
  [97]  3  9  2  9  2  9  9  0  3  0  9  3  3  6  0  2  0  2  2  0  2  1  6  2
 [121]  3  1  3  3  3  3  4  2  0  3  2  2  2  3  0  2  0  0  8  3  3  6  3  2
 [145]  3  1  1  2  9  3  3  3  1  0  3  3  3  3  9  2  3  9  2  2  6  0  3  9
 [169]  2  3  3  0  3  3  3  3  9  1  9  3  4  0  9  3  9  9  0  3  6  0  3  6
 [193]  0  0  3  1  0  2  3  9  3  1  3  2  0  9  3  3  0  3  0  2  2  0  0  0
 [217]  1  0  0  0  3  3  1  1  2  3  0  0  9  9  3  3  1  1  0  3  2  3  2  1
 [241]  3  0  9  3  3  1  3  2  5  1  0  5  3  3  1  9  2  2  3  9  2  0  2  2
 [265]  3  3  3  0  2  3  1  2  5  2  1  8  3  9  3  3  3  2  1  0  3  0  3  3
 [289]  0  3  6  2  3  9  2  1  2  9  2  3  8  3  2  3  3  0  2  0  3  1  3  1
 [313]  0  0  0  1  9  3  3  0  0  3  9  2  0  0  0  0  0  3  6  3  3  0  0  2
 [337]  5  0  1  1  3  1  1  0  0  3  6  0  0  6  2  0  9  0  3  1  1  0  0  0
 [361]  0  2  2  2  3  2  3  8  0  2  9  3  1  4  2  3  5  1  5  3  2  2  0  0
 [385]  2  3  2  0  4  1  1  0  6  3  2  3  3  3  1  0  9  9  1  3  3 10  1  9
 [409]  9  3  3  9  3  9  3  3  3  1  3  2  3  0  0  0  3  3  6  6  6  0  3  5
 [433]  9  9  9  3  6  3  9  9  2  9  2  3  3  2  3  3  1  3  3  2  0  6  0  3
 [457] 10  9  2  1  1  2  1  0  0  2  1  0  3  6  2  3  9  2  3  8  2  3  6  5
 [481]  5  2  9  2  2  9  2  2  9  0  3  2  9  3  1  3  3  1  0  3  0  0  3  5
 [505]  1  3  3  1  2  0  0  6  0  2  0  3  9  6  3  2  2  2  3  3  1  3  3  3
 [529]  3  3  3  1  3  3  3  3  0  0  3  2  3  3  2  2  3  9  3  3  0  2  0  6
 [553]  0  8  2  9  0  2  1  9  0  1  0  3  9  3  9  0  2  3  0  6  1  2  1  9
 [577]  2  6  2  3  3  2  3  4  2  1  0  2  3  2  2 10  2  0  2  2  2  0  3  2
 [601]  1  2  0  2  2  2  2  0  1  2  0  2  2  2  1  0  1  0  2  0  1 10  1  2
 [625]  1  2  0  3  8  2  2  2  2  2  0  2  2  9  2  1  2  9  1  1  6 10  3  3
 [649]  9  9  2  3  8  3  9  9  3  3  3  3  3  3  3  3  0  3  3  3  3  3  3  3
 [673]  3  3  3  0  3  3  3  3  3  3  1  3  3  2  2  4  2  3  3  0  5  1  2  3
 [697]  0  3  1  3  1  1  6  2  3  4  2  0  9  6  0  5  9  6  0  5  6  9  2  3
 [721]  6  6  1  1  2  1  0  0  1  3  1  0  1  0  1  4  3  3  5  1  2  3  2  1
 [745]  1  2  1  5  6  2  0  0  6  1  0  0  0  0  0  0  3  3  0  6  0  3  3  0
 [769]  0  4  3  0  4  0  9  0  2  2  3  6  2  3  0  6  3  3  0  5  9  2  0  3
 [793]  2  6  9  9  2  6  0  0  0  0  0  0  0  0  0  9  2  6  9  9  5  3  1  2
 [817]  0  0  2  2  3  6  3  3  3  0  9  0  5  3  3  3  9  3  2  1  9  2  0  0
 [841]  6  2  2 10 10  3  3 10  3  6  3  3  9  0  2  0  2  3  3  3  9  9  3  0
 [865]  6  3  0  1  2  0  4  0  3  9  6  0  0  3  3 10  2  3  0  0  0  0  0  6
 [889]  3  2  0  1  3  2  2  1  9  0  9  0  0  0  0  2  2  2  2  2  0  2  0  0
 [913]  3  2  2  2  2  2  1  1  2  0  0  9  6  2  9  8  1  9  0  0  0  0  0  0
 [937]  2  0  0  0  0  0  6  0  3  0  2  1  0  3  3  0  9  1  9  5  9  2  9  3
 [961]  0  3  9  2  3  2  9  3  3  0  9  9  3  9  6  5 10  0  2  1  3  9  2  3
 [985]  3  9  0  3  0  0  6  1  1  0  3  3  0  0  3  2
> cdata$Purpose[cdata$Purpose==4]
 [1] 4 4 4 4 4 4 4 4 4 4 4 4
> match(4,cdata$Purpose)
[1] 24
> match("4",cdata$Purpose)
[1] 24
> cdata$Purpose[24]
[1] 4
> which(cdata$Purpose==4)
 [1]  24 127 181 374 389 584 688 706 736 770 773 871
> ind4=which(cdata$Purpose==4)
> cdata$Purpose[ind4]
 [1] 4 4 4 4 4 4 4 4 4 4 4 4
> cdata$Purpose[ind4]=rep(3,length(ind4))
> cdata$Purpose[ind4]
 [1] 3 3 3 3 3 3 3 3 3 3 3 3
> table(cdata$Purpose)

  0   1   2   3   5   6   8   9  10 
234 103 181 292  22  50   9  97  12 
> ind5=which(cdata$Purpose==5)
> cdata$Purpose[ind5]
 [1] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
> cdata$Purpose[ind5]=rep(3,length(ind5))
> table(cdata$Purpose)

  0   1   2   3   6   8   9  10 
234 103 181 314  50   9  97  12 
> ind6=which(cdata$Purpose==6)
> cdata$Purpose[ind6]
 [1] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6
[39] 6 6 6 6 6 6 6 6 6 6 6 6
> cdata$Purpose[ind6]=rep(0,length(ind6))
> table(cdata$Purpose)

  0   1   2   3   8   9  10 
284 103 181 314   9  97  12 
> ind6=which(cdata$Purpose==7)
> ind7=which(cdata$Purpose==7)
> length(ind7)
[1] 0
> pp
     Other    New car   Used car  Furniture   Radio/TV Appliances     Repair 
       234        103        181        280         12         22         50 
  Vacation Retraining   Business 
         9         97         12 
> ind8=which(cdata$Purpose==8)
> cdata$Purpose[ind8]=rep(0,length(ind8))
> ind9=which(cdata$Purpose==9)
> cdata$Purpose[ind9]=rep(0,length(ind9))
> ind10=which(cdata$Purpose==10)
> cdata$Purpose[ind10]=rep(0,length(ind10))
> table(cdata$Purpose)

  0   1   2   3 
402 103 181 314 
> names(cdata$Purpose)[1]="Other"
> names(cdata$Purpose)[2]="New car"
> names(cdata$Purpose)[3]="Used car"
> names(cdata$Purpose)[4]="Home related"
> table(cdata$Purpose)

  0   1   2   3 
402 103 181 314 
> names(cdata$Purpose)
NULL
> names(table(cdata$Purpose))[1]="Other"
Error in names(table(cdata$Purpose))[1] = "Other" : 
  could not find function "table<-"
> tt=table(cdata$Purpose)
> names(tt)
[1] "0" "1" "2" "3"
> names(tt)[1]="Other"
> names(tt)[2]="New car"
> names(tt)[3]="Used car"
> names(tt)[1]="Other"
> tt
   Other  New car Used car        3 
     402      103      181      314 
> names(tt)[4]="Home related"
> tt
       Other      New car     Used car Home related 
         402          103          181          314 
> table(cdata$Account.Balance)

  1   2   3   4 
274 269  63 394 
> ind4=which(cdata$Account.Balance==4)
> cdata$Account.Balance[ind4]=rep(3,length(ind4))
> table(cdata$Account.Balance)

  1   2   3   4 
274 269 457   0 
> which(cdata$Account.Balance==4)
integer(0)
> ind4
  [1]   9  20  29  32  33  34  37  38  39  40  41  43  47  48  49  51  53  54
 [19]  55  57  59  60  61  62  63  64  66  67  68  70  72  73  74  77  78  80
 [37]  81  82  85  87  88  96 101 105 106 107 108 109 110 114 118 119 120 122
 [55] 124 125 126 127 128 129 130 132 134 135 136 141 142 144 145 146 149 152
 [73] 153 156 158 161 163 164 166 167 168 169 170 174 175 176 177 179 180 181
 [91] 182 184 185 186 187 188 191 194 195 196 197 198 199 200 201 202 210 217
[109] 220 223 224 226 228 229 231 232 233 237 239 240 241 242 243 244 245 246
[127] 247 248 250 253 254 255 258 260 261 262 264 265 266 268 269 270 271 272
[145] 273 274 275 276 277 283 286 288 289 290 291 292 293 295 296 297 298 300
[163] 304 306 308 310 311 312 313 316 317 319 320 321 322 323 325 326 327 329
[181] 330 331 332 333 334 335 339 340 341 343 344 345 346 347 350 351 352 353
[199] 355 356 358 360 361 363 364 365 366 372 375 380 383 385 388 391 394 395
[217] 398 399 404 405 407 410 411 412 413 414 415 416 417 418 419 421 424 425
[235] 426 431 432 435 436 437 438 441 442 444 445 446 447 448 449 460 463 468
[253] 470 471 472 473 474 476 477 478 479 481 483 484 485 486 487 489 490 491
[271] 492 494 496 497 498 499 501 502 503 504 505 506 507 508 509 511 512 515
[289] 518 519 520 521 522 523 524 526 529 530 531 532 537 538 539 545 550 552
[307] 553 554 556 559 561 562 565 568 569 570 572 583 602 621 622 627 628 629
[325] 645 647 648 654 686 691 694 695 696 698 706 710 711 713 714 715 716 718
[343] 723 724 727 728 729 732 733 736 738 741 742 744 745 746 748 763 765 766
[361] 768 780 786 813 816 820 832 833 835 837 839 840 843 855 861 864 872 873
[379] 874 897 898 900 941 943 947 948 950 954 961 967 971 982 986 998
> length(ind4)
[1] 394
> dim(tt)
[1] 4
> tt=tt[-1]
> tt
     New car     Used car Home related 
         103          181          314 
> table(cdata$Account.Balance)

  1   2   3   4 
274 269 457   0 
> table(cdata$Account.Balance)[-1]

  2   3   4 
269 457   0 
> table(cdata$Account.Balance)[-4]

  1   2   3 
274 269 457 
> sum(table(cdata$Account.Balance))
[1] 1000
> tt=table(cdata$Account.Balance)[-4]
> names(tt)[1]="No acc"
> names(tt)[2]="None"
> names(tt)[3]="Some balance"
> tt
      No acc         None Some balance 
         274          269          457 
> tt=table(cdata$Account.Balance)
> table(cdata$Account.Balance)

  1   2   3   4 
274 269 457   0 
> names(table(cdata$Account.Balance))
[1] "1" "2" "3" "4"
> tt=names(table(cdata$Account.Balance))
> tt[1]="No acc"
> tt[2]="No balance"
> tt[3]="Some balance"
> tt[4]="Not used"
> table(cdata$Account.Balance)

  1   2   3   4 
274 269 457   0 
> names(table(cdata$Account.Balance))[1]
[1] "1"
> names(table(cdata$Account.Balance))[1]="No acc"
Error in names(table(cdata$Account.Balance))[1] = "No acc" : 
  could not find function "table<-"
> cdata$Payment.Status
   [1] 4 4 2 4 4 4 4 4 4 2 4 4 4 3 2 2 4 2 4 4 4 4 2 4 4 3 2 4 2 4 4 4 4 2 2 4 4
  [38] 4 2 4 4 2 4 4 2 2 2 4 2 4 2 2 4 4 2 4 4 2 2 2 4 2 4 3 3 4 2 2 2 3 4 2 2 2
  [75] 2 2 4 4 4 2 4 4 2 4 4 2 4 3 4 3 4 2 0 2 4 4 4 3 2 4 4 2 3 3 4 2 4 2 2 4 2
 [112] 2 4 2 2 2 4 2 4 2 2 4 2 4 2 4 2 2 2 4 2 2 2 2 2 2 2 1 4 4 2 2 2 4 2 2 2 2
 [149] 2 4 1 2 4 2 2 4 2 4 1 4 4 4 2 4 2 4 4 4 4 4 2 2 2 2 2 2 4 4 2 3 2 4 0 4 2
 [186] 2 2 2 2 2 2 2 2 2 2 4 4 4 2 1 2 1 1 2 2 2 2 2 1 2 2 1 1 4 2 2 2 2 2 2 1 4
 [223] 3 3 2 4 2 3 2 1 2 0 2 2 2 2 2 2 2 2 4 2 2 4 1 2 4 3 2 2 3 3 2 2 4 2 3 4 2
 [260] 2 2 4 2 2 2 2 2 2 4 1 2 3 2 2 2 1 2 4 2 2 3 2 2 3 2 2 4 2 2 3 4 2 4 3 3 2
 [297] 2 3 2 3 1 2 2 4 2 2 2 1 2 0 4 4 4 2 2 2 1 2 4 0 2 2 2 4 2 4 2 4 2 4 4 4 4
 [334] 2 3 2 4 4 2 2 4 1 4 2 4 2 2 4 4 4 4 2 4 4 2 4 2 4 2 4 4 2 4 2 2 0 2 0 2 2
 [371] 2 4 4 2 3 2 0 3 2 4 2 2 4 2 4 2 2 2 2 2 2 4 4 4 2 2 3 2 3 2 2 2 2 2 2 2 2
 [408] 2 2 2 2 3 4 3 4 4 4 4 4 4 2 4 4 2 4 4 3 4 2 2 4 3 4 4 4 3 4 3 4 4 4 3 4 2
 [445] 4 2 4 2 2 2 2 2 2 4 2 3 3 2 3 2 2 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 2 2
 [482] 2 3 4 4 4 4 4 2 2 2 4 0 4 4 2 2 4 4 2 2 4 2 4 2 4 4 4 4 2 4 2 4 2 2 2 3 2
 [519] 2 4 2 2 2 2 4 4 2 2 2 4 4 4 2 4 2 2 4 4 4 0 2 2 2 4 4 2 2 4 2 4 2 4 2 2 2
 [556] 3 0 2 2 2 4 4 2 2 3 3 3 4 4 2 2 2 2 1 2 0 2 2 4 2 1 2 2 2 2 2 4 2 2 2 2 4
 [593] 4 1 0 4 2 4 2 2 2 4 2 2 2 4 3 4 2 2 2 2 2 2 2 2 4 2 2 4 2 4 4 2 4 4 2 4 2
 [630] 2 4 2 2 2 2 2 4 4 4 4 4 0 4 4 4 2 4 3 3 2 2 2 2 4 3 3 4 2 2 2 2 2 3 2 4 2
 [667] 2 4 2 2 2 2 2 2 2 4 4 4 4 2 1 2 3 4 2 4 2 1 2 2 2 2 2 3 2 3 3 2 4 4 2 4 3
 [704] 2 4 2 4 4 1 4 2 4 4 4 2 0 2 2 2 2 3 2 3 3 2 2 2 2 4 3 1 2 4 2 2 2 2 4 2 0
 [741] 2 2 2 4 2 2 2 4 2 2 3 2 4 2 2 0 4 0 2 4 2 2 0 2 3 2 4 4 1 2 2 2 2 2 3 2 3
 [778] 4 4 2 4 3 2 1 1 2 1 3 0 4 0 2 1 2 3 0 2 4 2 2 2 2 2 2 2 2 0 3 2 1 2 2 2 2
 [815] 1 3 2 2 2 2 2 3 2 2 3 3 0 4 2 2 0 3 3 2 2 2 0 2 1 2 2 4 2 2 4 4 3 1 2 2 2
 [852] 1 4 4 2 2 1 2 2 2 2 2 2 4 4 4 2 2 2 2 2 4 2 3 1 4 4 2 2 1 2 0 2 1 2 2 2 4
 [889] 2 2 2 4 2 2 3 2 3 2 2 2 2 2 3 2 0 4 1 2 3 0 3 4 3 1 0 2 2 0 0 4 1 1 2 0 3
 [926] 2 1 2 2 0 4 2 2 2 4 4 2 4 2 3 4 2 2 2 2 1 2 1 1 4 4 4 2 4 1 4 2 2 0 2 2 2
 [963] 0 2 2 2 3 2 2 1 2 0 2 0 2 2 0 2 2 2 2 3 4 2 2 4 2 2 2 2 2 2 2 4 0 2 2 4 2
[1000] 2
> table(cdata$Payment.Status)

  0   1   2   3   4 
 40  49 530  88 293 
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ cr                               : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : Factor w/ 4 levels "1","2","3","4": 1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : num  2 0 0 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> table(cdata$Value.Savings.Stocks)  

  1   2   3   4   5 
603 103  63  48 183 
> 100*(table(cdata$Value.Savings.Stocks)  /sum(table(cdata$Value.Savings.Stocks)))

   1    2    3    4    5 
60.3 10.3  6.3  4.8 18.3 
> table(cdata$Payment.Status)

  0   1   2   3   4 
 40  49 530  88 293 
> r=table(cdata$Payment.Status)
> 100*(r/sum(r))

   0    1    2    3    4 
 4.0  4.9 53.0  8.8 29.3 
> r=table(cdata$Value.Savings.Stocks)  
> 100*(r/sum(r))

   1    2    3    4    5 
60.3 10.3  6.3  4.8 18.3 
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ cr                               : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : Factor w/ 4 levels "1","2","3","4": 1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : num  2 0 0 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> r=table(cdata$Length.of.current.employment)  
> 100*(r/sum(r))

   1    2    3    4    5 
 6.2 17.2 33.9 17.4 25.3 
> r=table(cdata$Sex...Marital.Status )  
> 100*(r/sum(r))

   1    2    3    4 
 5.0 31.0 54.8  9.2 
> r=table(cdata$No.of.Credits.at.this.Bank)  
> 100*(r/sum(r))

   1    2    3    4 
63.3 33.3  2.8  0.6 
> r=table(cdata$Guarantor)  
> 100*(r/sum(r))

   1    2    3 
90.7  4.1  5.2 
> r=table(cdata$Concurrent.Credits)  
> 100*(r/sum(r))

   1    2    3 
13.9  4.7 81.4 
> r=table(cdata$Account.Balance)  
> r

  1   2   3   4 
274 269 457   0 
> r=table(cdata$Payment.Status)  
> r

  0   1   2   3   4 
 40  49 530  88 293 
> which(cdata$Payment.Status==1)
 [1] 138 151 159 200 202 203 209 212 213 221 230 245 270 276 301 308 317 342 574
[20] 581 594 681 688 709 731 769 784 785 787 793 810 815 839 848 852 857 875 880
[39] 884 907 914 921 922 927 946 948 949 955 970
> ind1=which(cdata$Payment.Status==1)
> str(cdata)
'data.frame':   1000 obs. of  21 variables:
 $ cr                               : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : Factor w/ 4 levels "1","2","3","4": 1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : num  2 0 0 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : int  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : int  2 3 4 3 3 2 4 2 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : int  2 3 2 3 3 3 3 3 2 2 ...
 $ Guarantors                       : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : int  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : int  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
> cdata$Payment.Status=as.factor(cadat$Payment.Status)
Error: object 'cadat' not found
> cdata$Payment.Status=as.factor(cdata$Payment.Status)
> cdata$Account.Balance=as.numeric(cdata$Account.Balance)
> table(cdata$Account.Balance)

  1   2   3 
274 269 457 
> ind1=which(cdata$Payment.Status==1)
> cdata$Account.Balance[ind1]=rep(0,length(ind1))
> ind4=which(cdata$Payment.Status==4)
> cdata$Account.Balance[ind4]=rep(3,length(ind4))
> table(cdata$Account.Balance)

  0   1   2   3 
 49 185 199 567 
> mydat=read.csv(file.choose())
> cdata$Account.Balance=mydat.Account.Balance
Error: object 'mydat.Account.Balance' not found
> cdata$Account.Balance=mydat$Account.Balance
> table(cdata$Account.Balance)

  1   2   3   4 
274 269  63 394 
> ind=which(cdata$Account.Balance==4)
> cdata$Account.Balance[ind]=rep(3,length(ind))
> table(cdata$Account.Balance)

  1   2   3 
274 269 457 
> ind=which(cdata$Payment.Status==1)
> cdata$Payment.Status[ind]=rep(0,length(ind))
> ind=which(cdata$Payment.Status==4)
> cdata$Payment.Status[ind]=rep(3,length(ind))
> table(cdata$Payment.Status)

  0   1   2   3   4 
 89   0 530 381   0 
> ind=which(cdata$Savings.stock.value==4)
> cdata$Savings.stock.value[ind]=rep(3,length(ind))
> table(cdata$Savings.stock.value)
< table of extent 0 >
> ind
integer(0)
> ind=which(cdata$Value.Savings.Stocks==4)
> cdata$Value.Savings.Stocks[ind]=rep(3,length(ind))
> table(cdata$Value.Savings.Stocks)

  1   2   3   5 
603 103 111 183 
> ind=which(cdata$Length.of.current.employment==2)
> cdata$Length.of.current.employment[ind]=rep(1,length(ind))
> table(cdata$Length.of.current.employment)

  1   3   4   5 
234 339 174 253 
> ind=which(cdata$Sex...Marital.Status ==2)
> cdata$Sex...Marital.Status [ind]=rep(1,length(ind))
> table(cdata$Sex...Marital.Status )

  1   3   4 
360 548  92 
> ind=which(cdata$No.of.Credits.at.this.Bank==3)
> cdata$No.of.Credits.at.this.Bank[ind]=rep(2,length(ind))
> ind=which(cdata$No.of.Credits.at.this.Bank==4)
> cdata$No.of.Credits.at.this.Bank[ind]=rep(2,length(ind))
> table(cdata$No.of.Credits.at.this.Bank)

  1   2 
633 367 
> ind=which(cdata$Guarantors==3)
> cdata$Guarantors[ind]=rep(2,length(ind))
> table(cdata$Guarantors)

  1   2 
907  93 
> ind=which(cdata$Concurrent.Credits ==2)
> cdata$Concurrent.Credits [ind]=rep(1,length(ind))
> table(cdata$Concurrent.Credits )

  1   3 
186 814 
> str(cdata)
'data.frame':   1000 obs. of  22 variables:
 $ cr                               : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : num  1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: int  4 4 2 4 4 4 4 4 4 2 ...
 $ Purpose                          : num  2 0 0 0 0 0 0 0 3 3 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : num  1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : num  1 3 4 3 3 1 4 1 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : num  1 3 1 3 3 3 3 3 1 1 ...
 $ Guarantors                       : num  1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : num  3 3 3 3 1 3 3 3 3 3 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : num  1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
 $ Payment.Status                   : Factor w/ 5 levels "0","1","2","3",..: 4 4 3 4 4 4 4 4 4 3 ...
> cdata$Account.Balance=as.factor(cdata$Account.Balance)
> table(cdata$Payment.Status)

  0   1   2   3   4 
 89   0 530 381   0 
> ind=which(cdata$Payment.Status.of.Previous.Credit ==1)
> cdata$Payment.Status.of.Previous.Credit[ind]=rep(0,length(ind))
> ind=which(cdata$Payment.Status.of.Previous.Credit ==4)
> cdata$Payment.Status.of.Previous.Credit[ind]=rep(3,length(ind))
> table(cdata$Payment.Status.of.Previous.Credit)

  0   2   3 
 89 530 381 
> cdata$Payment.Status.of.Previous.Credit=as.factor(cdata$Payment.Status.of.Previous.Credit)
> cdata$Value.Savings.Stocks=as.factor(cdata$Value.Savings.Stocks)
> table(cdata$Payment.Status.of.Previous.Credit)

  0   2   3 
 89 530 381 
> table(cdata$Value.Savings.Stocks)

  1   2   3   5 
603 103 111 183 
> cdata$Length.of.current.employment=as.factor(cdata$Length.of.current.employment)
> table(cdata$Value.Savings.Stocks)

  1   2   3   5 
603 103 111 183 
> table(cdata$Length.of.current.employment)

  1   3   4   5 
234 339 174 253 
> cdata$Sex...Marital.Status=as.factor(cdata$Sex...Marital.Status)
> cdata$No.of.Credits.at.this.Bank =as.factor(cdata$No.of.Credits.at.this.Bank )
> cdata$Guarantors  =as.factor(cdata$Guarantors )
> cdata$Concurrent.Credits  =as.factor(cdata$Concurrent.Credits)
> cdata$ Purpose  =as.factor(cdata$ Purpose)
> str(cdata)
'data.frame':   1000 obs. of  22 variables:
 $ cr                               : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : Factor w/ 3 levels "1","2","3": 1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: Factor w/ 3 levels "0","2","3": 3 3 2 3 3 3 3 3 3 2 ...
 $ Purpose                          : Factor w/ 4 levels "0","1","2","3": 3 1 1 1 1 1 1 1 4 4 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : Factor w/ 4 levels "1","2","3","5": 1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : Factor w/ 4 levels "1","3","4","5": 1 2 3 2 2 1 3 1 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : Factor w/ 3 levels "1","3","4": 1 2 1 2 2 2 2 2 1 1 ...
 $ Guarantors                       : Factor w/ 2 levels "1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : Factor w/ 2 levels "1","3": 2 2 2 2 1 2 2 2 2 2 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : Factor w/ 2 levels "1","2": 1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
 $ Payment.Status                   : Factor w/ 5 levels "0","1","2","3",..: 4 4 3 4 4 4 4 4 4 3 ...
> names(cdata)[1]
[1] "cr"
> names(cdata)[1]="Creditability"
> str(cdata)
'data.frame':   1000 obs. of  22 variables:
 $ Creditability                    : Factor w/ 2 levels "0","1": 2 2 2 2 2 2 2 2 2 2 ...
 $ Account.Balance                  : Factor w/ 3 levels "1","2","3": 1 1 2 1 1 1 1 1 3 2 ...
 $ Duration.of.Credit..month.       : int  18 9 12 12 12 10 8 6 18 24 ...
 $ Payment.Status.of.Previous.Credit: Factor w/ 3 levels "0","2","3": 3 3 2 3 3 3 3 3 3 2 ...
 $ Purpose                          : Factor w/ 4 levels "0","1","2","3": 3 1 1 1 1 1 1 1 4 4 ...
 $ Credit.Amount                    : int  1049 2799 841 2122 2171 2241 3398 1361 1098 3758 ...
 $ Value.Savings.Stocks             : Factor w/ 4 levels "1","2","3","5": 1 1 2 1 1 1 1 1 1 3 ...
 $ Length.of.current.employment     : Factor w/ 4 levels "1","3","4","5": 1 2 3 2 2 1 3 1 1 1 ...
 $ Instalment.per.cent              : int  4 2 2 3 4 1 1 2 4 1 ...
 $ Sex...Marital.Status             : Factor w/ 3 levels "1","3","4": 1 2 1 2 2 2 2 2 1 1 ...
 $ Guarantors                       : Factor w/ 2 levels "1","2": 1 1 1 1 1 1 1 1 1 1 ...
 $ Duration.in.Current.address      : int  4 2 4 2 4 3 4 4 4 4 ...
 $ Most.valuable.available.asset    : int  2 1 1 1 2 1 1 1 3 4 ...
 $ Age..years.                      : int  21 36 23 39 38 48 39 40 65 23 ...
 $ Concurrent.Credits               : Factor w/ 2 levels "1","3": 2 2 2 2 1 2 2 2 2 2 ...
 $ Type.of.apartment                : int  1 1 1 1 2 1 2 2 2 1 ...
 $ No.of.Credits.at.this.Bank       : Factor w/ 2 levels "1","2": 1 2 1 2 2 2 2 1 2 1 ...
 $ Occupation                       : int  3 3 2 2 2 2 2 2 1 1 ...
 $ No.of.dependents                 : int  1 2 1 2 1 2 1 2 1 1 ...
 $ Telephone                        : int  1 1 1 1 1 1 1 1 1 1 ...
 $ Foreign.Worker                   : int  1 1 1 2 2 2 2 2 1 1 ...
 $ Payment.Status                   : Factor w/ 5 levels "0","1","2","3",..: 4 4 3 4 4 4 4 4 4 3 ...
> table(cdata$Payment.Status.of.Previous.Credit)

  0   2   3 
 89 530 381 
> table(cdata$Creditability,table$Account.Balance)
Error in table$Account.Balance : 
  object of type 'closure' is not subsettable
> table(cdata$Creditability,cdata$Account.Balance)
   
      1   2   3
  0 135 105  60
  1 139 164 397
> table(cdata$Creditability,cdata$Payment.Status.of.Previous.Credit)
   
      0   2   3
  0  53 169  78
  1  36 361 303
> summary(cdata$Duration.of.Credit..month.)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    4.0    12.0    18.0    20.9    24.0    72.0 
> summary(cdata$Credit.Amount)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    250    1366    2320    3271    3972   18424 
> summary(cdata$Age..years. )
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  19.00   27.00   33.00   35.54   42.00   75.00 
> layout(matrix(1:3),ncol=3)
Error in layout(matrix(1:3), ncol = 3) : unused argument (ncol = 3)
> layout(matrix(1:3,ncol=3))
> hist(cdata$Duration.of.Credit..month., main="Duration")
> hist(cdata$Credit.Amount, main="Amount")
> hist(cdata$Age..years.,main="Age" )
> layout(matrix(1:6),ncol=3)
Error in layout(matrix(1:6), ncol = 3) : unused argument (ncol = 3)
> layout(matrix(1:6,ncol=3))
> hist(cdata$Duration.of.Credit..month., main="Duration")
> hist(cdata$Credit.Amount, main="Amount")
> hist(cdata$Age..years.,main="Age" )
> boxplot(cdata$Duration.of.Credit..month., main="Duration")
> boxplot(cdata$Credit.Amount, main="Amount")
> boxplot(cdata$Age..years.,main="Age" )
> chisq.test
function (x, y = NULL, correct = TRUE, p = rep(1/length(x), length(x)), 
    rescale.p = FALSE, simulate.p.value = FALSE, B = 2000) 
{
    DNAME <- deparse(substitute(x))
    if (is.data.frame(x)) 
        x <- as.matrix(x)
    if (is.matrix(x)) {
        if (min(dim(x)) == 1L) 
            x <- as.vector(x)
    }
    if (!is.matrix(x) && !is.null(y)) {
        if (length(x) != length(y)) 
            stop("'x' and 'y' must have the same length")
        DNAME2 <- deparse(substitute(y))
        xname <- if (length(DNAME) > 1L || nchar(DNAME, "w") > 
            30) 
            ""
        else DNAME
        yname <- if (length(DNAME2) > 1L || nchar(DNAME2, "w") > 
            30) 
            ""
        else DNAME2
        OK <- complete.cases(x, y)
        x <- factor(x[OK])
        y <- factor(y[OK])
        if ((nlevels(x) < 2L) || (nlevels(y) < 2L)) 
            stop("'x' and 'y' must have at least 2 levels")
        x <- table(x, y)
        names(dimnames(x)) <- c(xname, yname)
        DNAME <- paste(paste(DNAME, collapse = "\n"), "and", 
            paste(DNAME2, collapse = "\n"))
    }
    if (any(x < 0) || anyNA(x)) 
        stop("all entries of 'x' must be nonnegative and finite")
    if ((n <- sum(x)) == 0) 
        stop("at least one entry of 'x' must be positive")
    if (simulate.p.value) {
        setMETH <- function() METHOD <<- paste(METHOD, "with simulated p-value\n\t (based on", 
            B, "replicates)")
        almost.1 <- 1 - 64 * .Machine$double.eps
    }
    if (is.matrix(x)) {
        METHOD <- "Pearson's Chi-squared test"
        nr <- as.integer(nrow(x))
        nc <- as.integer(ncol(x))
        if (is.na(nr) || is.na(nc) || is.na(nr * nc)) 
            stop("invalid nrow(x) or ncol(x)", domain = NA)
        sr <- rowSums(x)
        sc <- colSums(x)
        E <- outer(sr, sc)/n
        v <- function(r, c, n) c * r * (n - r) * (n - c)/n^3
        V <- outer(sr, sc, v, n)
        dimnames(E) <- dimnames(x)
        if (simulate.p.value && all(sr > 0) && all(sc > 0)) {
            setMETH()
            tmp <- .Call(C_chisq_sim, sr, sc, B, E)
            STATISTIC <- sum(sort((x - E)^2/E, decreasing = TRUE))
            PARAMETER <- NA
            PVAL <- (1 + sum(tmp >= almost.1 * STATISTIC))/(B + 
                1)
        }
        else {
            if (simulate.p.value) 
                warning("cannot compute simulated p-value with zero marginals")
            if (correct && nrow(x) == 2L && ncol(x) == 2L) {
                YATES <- min(0.5, abs(x - E))
                if (YATES > 0) 
                  METHOD <- paste(METHOD, "with Yates' continuity correction")
            }
            else YATES <- 0
            STATISTIC <- sum((abs(x - E) - YATES)^2/E)
            PARAMETER <- (nr - 1L) * (nc - 1L)
            PVAL <- pchisq(STATISTIC, PARAMETER, lower.tail = FALSE)
        }
    }
    else {
        if (length(dim(x)) > 2L) 
            stop("invalid 'x'")
        if (length(x) == 1L) 
            stop("'x' must at least have 2 elements")
        if (length(x) != length(p)) 
            stop("'x' and 'p' must have the same number of elements")
        if (any(p < 0)) 
            stop("probabilities must be non-negative.")
        if (abs(sum(p) - 1) > sqrt(.Machine$double.eps)) {
            if (rescale.p) 
                p <- p/sum(p)
            else stop("probabilities must sum to 1.")
        }
        METHOD <- "Chi-squared test for given probabilities"
        E <- n * p
        V <- n * p * (1 - p)
        STATISTIC <- sum((x - E)^2/E)
        names(E) <- names(x)
        if (simulate.p.value) {
            setMETH()
            nx <- length(x)
            sm <- matrix(sample.int(nx, B * n, TRUE, prob = p), 
                nrow = n)
            ss <- apply(sm, 2L, function(x, E, k) {
                sum((table(factor(x, levels = 1L:k)) - E)^2/E)
            }, E = E, k = nx)
            PARAMETER <- NA
            PVAL <- (1 + sum(ss >= almost.1 * STATISTIC))/(B + 
                1)
        }
        else {
            PARAMETER <- length(x) - 1
            PVAL <- pchisq(STATISTIC, PARAMETER, lower.tail = FALSE)
        }
    }
    names(STATISTIC) <- "X-squared"
    names(PARAMETER) <- "df"
    if (any(E < 5) && is.finite(PARAMETER)) 
        warning("Chi-squared approximation may be incorrect")
    structure(list(statistic = STATISTIC, parameter = PARAMETER, 
        p.value = PVAL, method = METHOD, data.name = DNAME, observed = x, 
        expected = E, residuals = (x - E)/sqrt(E), stdres = (x - 
            E)/sqrt(V)), class = "htest")
}
<bytecode: 0x000001fef71c57a8>
<environment: namespace:stats>
> chisq.test(cdata$Creditability,cdata$Account.Balance)

        Pearson's Chi-squared test

data:  cdata$Creditability and cdata$Account.Balance
X-squared = 120.84, df = 2, p-value < 2.2e-16

> ?chisq.test
starting httpd help server ... done
> summary(chisq.test(cdata$Creditability,cdata$Account.Balance))
          Length Class  Mode     
statistic 1      -none- numeric  
parameter 1      -none- numeric  
p.value   1      -none- numeric  
method    1      -none- character
data.name 1      -none- character
observed  6      table  numeric  
expected  6      -none- numeric  
residuals 6      table  numeric  
stdres    6      table  numeric  
> o=chisq.test(cdata$Creditability,cdata$Account.Balance)
> str(o)
List of 9
 $ statistic: Named num 121
  ..- attr(*, "names")= chr "X-squared"
 $ parameter: Named int 2
  ..- attr(*, "names")= chr "df"
 $ p.value  : num 5.74e-27
 $ method   : chr "Pearson's Chi-squared test"
 $ data.name: chr "cdata$Creditability and cdata$Account.Balance"
 $ observed : 'table' int [1:2, 1:3] 135 139 105 164 60 397
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability  : chr [1:2] "0" "1"
  .. ..$ cdata$Account.Balance: chr [1:3] "1" "2" "3"
 $ expected : num [1:2, 1:3] 82.2 191.8 80.7 188.3 137.1 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability  : chr [1:2] "0" "1"
  .. ..$ cdata$Account.Balance: chr [1:3] "1" "2" "3"
 $ residuals: 'table' num [1:2, 1:3] 5.82 -3.81 2.71 -1.77 -6.58 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability  : chr [1:2] "0" "1"
  .. ..$ cdata$Account.Balance: chr [1:3] "1" "2" "3"
 $ stdres   : 'table' num [1:2, 1:3] 8.17 -8.17 3.78 -3.78 -10.68 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability  : chr [1:2] "0" "1"
  .. ..$ cdata$Account.Balance: chr [1:3] "1" "2" "3"
 - attr(*, "class")= chr "htest"
> ?ttest
No documentation for ‘ttest’ in specified packages and libraries:
you could try ‘??ttest’
> t.test(cdata$Duration.of.Credit..month.~cdata$Creditability)

        Welch Two Sample t-test

data:  cdata$Duration.of.Credit..month. by cdata$Creditability
t = 6.4696, df = 485.44, p-value = 2.404e-10
alternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0
95 percent confidence interval:
 3.936033 7.369682
sample estimates:
mean in group 0 mean in group 1 
       24.86000        19.20714 

> chisq.test(cdata$Creditability,cdata$Account.Balance)

        Pearson's Chi-squared test

data:  cdata$Creditability and cdata$Account.Balance
X-squared = 120.84, df = 2, p-value < 2.2e-16

> chisq.test(cdata$Creditability,cdata$Guarantors)

        Pearson's Chi-squared test with Yates' continuity correction

data:  cdata$Creditability and cdata$Guarantors
X-squared = 6.0506e-30, df = 1, p-value = 1

> o=chisq.test(cdata$Creditability,cdata$Guarantors)
> str(o)
List of 9
 $ statistic: Named num 6.05e-30
  ..- attr(*, "names")= chr "X-squared"
 $ parameter: Named int 1
  ..- attr(*, "names")= chr "df"
 $ p.value  : num 1
 $ method   : chr "Pearson's Chi-squared test with Yates' continuity correction"
 $ data.name: chr "cdata$Creditability and cdata$Guarantors"
 $ observed : 'table' int [1:2, 1:2] 272 635 28 65
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability: chr [1:2] "0" "1"
  .. ..$ cdata$Guarantors   : chr [1:2] "1" "2"
 $ expected : num [1:2, 1:2] 272.1 634.9 27.9 65.1
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability: chr [1:2] "0" "1"
  .. ..$ cdata$Guarantors   : chr [1:2] "1" "2"
 $ residuals: 'table' num [1:2, 1:2] -0.00606 0.00397 0.01893 -0.01239
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability: chr [1:2] "0" "1"
  .. ..$ cdata$Guarantors   : chr [1:2] "1" "2"
 $ stdres   : 'table' num [1:2, 1:2] -0.0238 0.0238 0.0238 -0.0238
  ..- attr(*, "dimnames")=List of 2
  .. ..$ cdata$Creditability: chr [1:2] "0" "1"
  .. ..$ cdata$Guarantors   : chr [1:2] "1" "2"
 - attr(*, "class")= chr "htest"
> save.image("C:\\Users\\Delta 00\\Desktop\\BA\\WEEK7")
> 